//
// Copyright (c) 2023 Michael Tuexen
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
#ifdef Linux
 0.000 `modprobe sctp`
 0.000 `sysctl net.sctp.prsctp_enable=0`
+0.000 `sysctl net.sctp.ecn_enable=0`
#endif
#ifdef FreeBSD
 0.000 `kldload -n sctp`
+0.000 `sysctl -w kern.timecounter.alloweddeviation=0`
+0.000 `sysctl -w net.inet.sctp.ecn_enable=0`
+0.000 `sysctl -w net.inet.sctp.pr_enable=0`
+0.000 `sysctl -w net.inet.sctp.asconf_enable=0`
+0.000 `sysctl -w net.inet.sctp.auth_enable=0`
+0.000 `sysctl -w net.inet.sctp.reconfig_enable=0`
+0.000 `sysctl -w net.inet.sctp.nrsack_enable=0`
+0.000 `sysctl -w net.inet.sctp.pktdrop_enable=0`
#endif
+0.000 socket(..., SOCK_STREAM, IPPROTO_SCTP) = 3
+0.000 fcntl(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0
+0.000 bind(3, ..., ...) = 0
+0.000 connect(3, ..., ...) = -1 EINPROGRESS (Operation now in progress)
+0.000 > sctp(tag=0): INIT[flgs=0, tag=1, a_rwnd=..., os=..., is=..., tsn=1,
                           SUPPORTED_ADDRESS_TYPES[types=[IPv4]]]
+0.050 < sctp(tag=1): INIT_ACK[flgs=0, tag=2, a_rwnd=1500, os=1, is=1, tsn=1,
                               STATE_COOKIE[len=4, val=...]]
+0.000 > sctp(tag=2): COOKIE_ECHO[flgs=0, len=4, val=...]
+0.010 < sctp(tag=0): INIT[flgs=0, tag=3, a_rwnd=1500, os=2, is=2, tsn=2,
                           SUPPORTED_ADDRESS_TYPES[types=[IPv4]]]
+0.000 > sctp(tag=3): INIT_ACK[flgs=0, tag=1, a_rwnd=..., os=..., is=..., tsn=1,
                               STATE_COOKIE[len=..., val=...]]
+0.050 < sctp(tag=1): COOKIE_ACK[flgs=0]
+0.000 close(3)= 0
+0.000 > sctp(tag=2): SHUTDOWN[flgs=0, cum_tsn=0]
+0.050 < sctp(tag=1): SHUTDOWN_ACK[flgs=0]
+0.000 > sctp(tag=2): SHUTDOWN_COMPLETE[flgs=0]
